(self.webpackChunkmerch_store=self.webpackChunkmerch_store||[]).push([[76],{6878:(o,d,e)=>{"use strict";e.d(d,{I:()=>p,t:()=>c});var r=e(1635);var s=e(1549),u=e.n(s),g=e(177),t=e(4438),m=e(8834),n=e(2864),h=e(7514);const p=new t.nKC("PRODUCT_LIST_FACADE");var l=e(1716);let c=class{productListFacade=(0,t.WQX)(p);skeletonService=(0,t.WQX)(h.Rm);filterService=(0,t.WQX)(n.xs,{optional:!0});emptyListTemplate=(0,t.hFB)();onShowProduct=(0,t.CGW)();toggleWishlist=(0,t.CGW)();addToCart=(0,t.CGW)();productListCardComponent=(0,t.dtW)(n.Tv);vm=(0,t.EWP)(()=>({products:this.productListFacade.products(),totalCount:this.productListFacade.totalCount()||this.productListFacade.products().length,productsOffset:this.productListFacade.productsPerPage(),subtitle:this.productListFacade.subtitle(),title:this.productListFacade.title(),isLoading:this.productListFacade.isLoading()&&!this.productListFacade.products().length,activeFilters:this.productListFacade.filters()}));seeMoreProducts(){this.productListFacade.seeMoreProducts(),this.focusLastProduct()}onFiltersChanged(i){this.productListFacade.getProducts(i)}focusLastProduct(){const i=[...this.productListCardComponent()];i[i.length-1].onFocusCardImg()}static propDecorators={emptyListTemplate:[{type:t.pde,args:[{isSignal:!0,alias:"emptyListTemplate",required:!1,transform:void 0}]}],onShowProduct:[{type:t.k7i,args:["onShowProduct"]}],toggleWishlist:[{type:t.k7i,args:["toggleWishlist"]}],addToCart:[{type:t.k7i,args:["addToCart"]}],productListCardComponent:[{type:t.b2L,args:[n.Tv,{isSignal:!0}]}]}};c=(0,r.Cg)([(0,t.uAl)({selector:"app-product-list",standalone:!0,imports:[g.MD,m.Hl,n.Tv,n.I6,n.GV],template:'@if (vm(); as vm) {\n  <div class="generic">\n    <article class="generic__navigation">\n      <h1 class="generic__navigation-category category-heading">{{ vm.title }}</h1>\n      <p class="body-0">{{ vm.subtitle }}</p>\n    </article>\n\n    @if (filterService) {\n      <app-product-list-filters [activeFilters]="vm.activeFilters" (filtersChanged)="onFiltersChanged($event)" />\n    }\n\n    @if (vm.isLoading) {\n      \x3c!-- TODO add to skeleton service support of more specific templates, like product card skleton etc --\x3e\n      <section class="skeleton-wrapper">\n        <ng-container *ngTemplateOutlet="skeletonService.rectangleTemplate()"></ng-container>\n      </section>\n    } @else {\n      @if (!vm.products.length) {\n        <ng-container *ngTemplateOutlet="emptyListTemplate()"></ng-container>\n      } @else {\n        <section class="generic__products">\n          @for (product of vm.products; track product.productId) {\n            <app-product-list-card\n              class="products-card"\n              [product]="product"\n              (clickOnProduct)="onShowProduct.emit($event)"\n              (toggleWishlist)="toggleWishlist.emit($event)"\n              (addToCart)="addToCart.emit($event)"\n            />\n          }\n        </section>\n        <app-see-more-items-button\n          (loadMore)="seeMoreProducts()"\n          [displayedCount]="vm.products.length"\n          [totalCount]="vm.totalCount"\n        ></app-see-more-items-button>\n      }\n    }\n  </div>\n}\n',changeDetection:t.Ngq.OnPush,providers:[{provide:l.YE,useValue:l.v.Directory}],styles:[u()]})],c)},1549:(o,d,e)=>{var r=e(8564),s=e(8557)(r);s.push([o.id,":host {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n.generic {\n  max-width: 1440px;\n  display: flex;\n  flex-direction: column;\n  width: -webkit-fill-available;\n}\n.generic__navigation {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  text-align: center;\n  margin-block-end: 48px;\n}\n.generic__navigation-category {\n  margin-block: 16px;\n}\n.generic__actions {\n  padding-inline: 24px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.generic__products {\n  border-radius: 5px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 24px;\n}\n@media (min-width: 0) and (max-width: 480px) {\n  .generic__products {\n    gap: 16px;\n  }\n}\n@media (min-width: 1024px) and (max-width: 1200px) {\n  .generic__products {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n@media (min-width: 1200px) and (max-width: 19000px) {\n  .generic__products {\n    grid-template-columns: repeat(4, 1fr);\n  }\n}\n.generic .skeleton-wrapper {\n  width: 100%;\n  height: 500px;\n}",""]),o.exports=s.toString()}}]);