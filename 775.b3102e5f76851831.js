(self.webpackChunkmerch_store=self.webpackChunkmerch_store||[]).push([[775],{6775:(r,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>R});var o=e(1635);var a=e(8550),P=e.n(a),l=e(177),t=e(4438),g=e(4710),s=e(5152),d=e(6878),p=e(2864),u=e(1716);let h=class{};h=(0,o.Cg)([(0,t.uAl)({selector:"app-you-may-also-like-slider-wrapper",standalone:!0,imports:[l.MD],template:"<ng-content></ng-content> ",changeDetection:t.Ngq.OnPush,providers:[{provide:u.YE,useValue:u.v.Recommendation}],styles:[""]})],h);var S=e(8834),w=e(5596),f=e(9213),A=e(727),x=e(7673),C=e(5964),L=e(8141),W=e(5558),M=e(4633);let v=class{dataService=(0,t.WQX)(s.FQ);title=(0,t.vPA)("Wish list");subtitle=(0,t.vPA)("All your favorites saved in one place.");filters=(0,t.vPA)([]);products=this.dataService.products;isLoading=this.dataService.isLoading;totalCount=this.dataService.totalCount;productsPerPage=this.dataService.productsPerPage;productsOffset=this.dataService.productsOffset;getProducts(i={includePreviousItems:!0}){this.dataService.getProducts(i)}seeMoreProducts(){this.dataService.seeMoreProducts()}};v=(0,o.Cg)([(0,t._qm)({providedIn:"root"})],v);let m=class{productService=(0,t.WQX)(s.bk);wishlistService=(0,t.WQX)(s.FQ);specialService=(0,t.WQX)(s.Fp);focusService=(0,t.WQX)(s.c4);router=(0,t.WQX)(g.Ix);dataService=(0,t.WQX)(d.I);settings=(0,t.WQX)(A.uu).settings;viewportScroller=(0,t.WQX)(l.Xr);cartDataService=(0,t.WQX)(s.Wv);cartService=(0,t.WQX)(s.mx);breadcrumbsService=(0,t.WQX)(p.EH);mayAlsoLikeProducts=(0,t.vPA)([]);isLoadingMayAlsoLikeProducts=(0,t.vPA)(!1);isDisplayMayAlsoLikeCarousel=(0,t.vPA)(!0);recentlyViewedProducts=(0,t.vPA)([]);isLoadingRecentlyViewedProducts=(0,t.vPA)(!1);cartProductsIds=(0,t.EWP)(()=>this.cartDataService.productDetailsCart()?.products.map(i=>i.productId)??[]);constructor(){(0,t.QZP)(()=>{1===this.wishlistService.products().length&&this.viewportScroller.scrollToPosition([0,0])}),(0,t.QZP)(()=>{this.cartProductsIds()?.length?this.fetchMayAlsoLikeProducts():this.isDisplayMayAlsoLikeCarousel.set(!1)},{allowSignalWrites:!0})}fetchMayAlsoLikeProducts(){(0,x.of)(this.cartProductsIds()).pipe((0,C.p)(i=>!!i&&!!i?.length),(0,L.M)(()=>this.isLoadingMayAlsoLikeProducts.set(!0)),(0,W.n)(i=>this.specialService.getYouMayAlsoLikeItems(i))).subscribe(i=>{this.mayAlsoLikeProducts.set(i),this.isLoadingMayAlsoLikeProducts.set(!1),this.isDisplayMayAlsoLikeCarousel.set(!!i.length)})}goToRecentlyViewed(){this.router.navigate([s.K_.RECENTLY_VIEWED])}onContinueShopping(){this.router.navigate([s.K_.ROOT]).then(()=>this.focusService.focusHeaderAction())}ngOnInit(){this.fetchDataForCarousels(),this.fetchMayAlsoLikeProducts(),this.breadcrumbsService.set(["Wishlist"]),this.dataService.getProducts({includePreviousItems:!1}),this.specialService.getRecentlyViewed({},()=>{}),this.specialService.recentlyViewedSubject.subscribe(i=>{i?.length>0&&this.recentlyViewedProducts.set(i)})}fetchDataForCarousels(){this.specialService.getRecentlyViewed({count:8},()=>{}),this.isLoadingRecentlyViewedProducts.set(!0),this.specialService.recentlyViewedSubject.subscribe(i=>{this.isLoadingRecentlyViewedProducts.set(!1),this.recentlyViewedProducts.set(i)})}toggleWishlist(i){this.wishlistService.toggleWishlist(i)}addToCart(i){this.cartService.addCartProduct(i)}onShowProduct(i){this.productService.goToProductDetails(i)}static ctorParameters=()=>[]};m=(0,o.Cg)([(0,t.uAl)({selector:"app-wishlist",template:'<app-breadcrumbs></app-breadcrumbs>\n<app-product-list\n  (onShowProduct)="onShowProduct($event)"\n  (toggleWishlist)="toggleWishlist($event)"\n  (addToCart)="addToCart($event)"\n  [emptyListTemplate]="emptyWishlistTemplate"\n></app-product-list>\n\n@if (!dataService.products()?.length) {\n  <div class="cart-container">\n    @if (isDisplayMayAlsoLikeCarousel()) {\n      <app-you-may-also-like-slider-wrapper>\n        <lib-product-card-slider\n          title="You may also like"\n          subTitle="Similar to items you have in a cart."\n          [products]="mayAlsoLikeProducts()"\n          [isLoading]="isLoadingMayAlsoLikeProducts()"\n          [withAction]="false"\n        ></lib-product-card-slider>\n      </app-you-may-also-like-slider-wrapper>\n    }\n    <app-recently-viewed-slider-wrapper>\n      <lib-product-card-slider\n        title="Recently viewed"\n        [products]="recentlyViewedProducts()"\n        [isLoading]="isLoadingRecentlyViewedProducts()"\n        [withAction]="false"\n      ></lib-product-card-slider>\n    </app-recently-viewed-slider-wrapper>\n  </div>\n}\n\n<ng-template #emptyWishlistTemplate>\n  <div class="wishlist-empty-wrapper">\n    <mat-icon svgIcon="ico_heart"></mat-icon>\n    <h1 class="category-heading text-center">Your Wish list is empty</h1>\n    <p class="body-0 text-center">Wish big and add your favorite finds here until you\u2019re ready to buy.</p>\n    <button\n      mat-raised-button\n      color="primary"\n      (click)="onContinueShopping()"\n      trackClick\n      [trackClick]="{ item: \'button\', linkName: \'Continue shopping\' }"\n    >\n      Continue shopping\n    </button>\n  </div>\n</ng-template>\n',imports:[l.MD,w.Hu,g.iI,p.m6,d.t,f.m_,S.Hl,p.Qo,u.nj,M.S,h],providers:[{provide:d.I,useClass:v}],standalone:!0,styles:[P()]}),(0,o.Sn)("design:paramtypes",[])],m);const R=m},8550:(r,n,e)=>{var o=e(8564),a=e(8557)(o);a.push([r.id,":host {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 49px 2rem;\n}\n@media (min-width: 0) and (max-width: 480px) {\n  :host {\n    padding: 0.5rem;\n  }\n}\n\n.wishlist-empty-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 36px;\n  padding: 72px 0 120px 0;\n}\n.wishlist-empty-wrapper ::ng-deep .mat-icon {\n  transform: scale(2.4);\n}\n.wishlist-empty-wrapper ::ng-deep .mat-icon svg path {\n  fill: #2e2e2e;\n}\n.wishlist-empty-wrapper button {\n  max-width: 280px;\n  width: 100%;\n}\n\n.products-carousel {\n  width: 100%;\n}\n\n.cart-container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 64px;\n}\n@media (min-width: 0) and (max-width: 480px) {\n  .cart-container {\n    max-width: 1440px;\n  }\n}\n@media (min-width: 481px) and (max-width: 1024px) {\n  .cart-container {\n    max-width: 672px;\n  }\n}\n@media (min-width: 1200px) and (max-width: 19000px) {\n  .cart-container {\n    max-width: 1440px;\n  }\n}",""]),r.exports=a.toString()}}]);