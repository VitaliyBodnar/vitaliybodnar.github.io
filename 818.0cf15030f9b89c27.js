(self.webpackChunkmerch_store=self.webpackChunkmerch_store||[]).push([[818],{2437:(d,m,n)=>{var r=n(8524),s=n(7445)(r);s.push([d.id,".filter-sidenav {\n  width: 280px;\n  border: 0 !important;\n}\n.filter-sidenav .mat-expansion-panel-header-title {\n  text-transform: uppercase;\n}\n\n.filter-row {\n  background: #ffffff;\n  padding: 8px 12px;\n}\n\n.all-products {\n  min-height: 400px;\n  padding: 2px;\n  overflow: hidden;\n}\n.all-products.p-left {\n  padding-left: 16px;\n}\n\n.products-wrapper {\n  margin: 8px -8px;\n}\n.products-wrapper .col {\n  padding: 8px;\n}\n\n.categories-wrapper {\n  position: relative;\n  max-height: 300px;\n}\n\n.filter-buttons button {\n  min-width: 36px;\n  margin: 0 6px 10px 0;\n  padding: 0;\n}\n\n.filter-price .mat-slider-horizontal {\n  min-width: 110px;\n}\n\n.selected-button {\n  background-color: gray;\n  color: #ffffff;\n}\n\n.brands-container {\n  column-count: 1;\n  column-gap: 16px;\n  margin-top: 30px;\n}\n.brands-container .brand-block {\n  display: block;\n}\n.brands-container .brand-block .brand {\n  background-color: #ffffff;\n  padding: 16px;\n  display: inline-block;\n  margin: 8px 0;\n}\n.brands-container .brand-block .brand img {\n  max-width: 100%;\n}\n\n@media (min-width: 480px) {\n  .brands-container {\n    column-count: 2;\n  }\n}\n@media (min-width: 1024px) {\n  .brands-container {\n    column-count: 3;\n  }\n}\n@media (min-width: 1024px) {\n  .brands-container {\n    column-count: 4;\n  }\n}\n@media (min-width: 1200px) {\n  .brands-container {\n    column-count: 5;\n  }\n}",""]),d.exports=s.toString()},7064:(d,m,n)=>{var r=n(8524),s=n(7445)(r);s.push([d.id,".brands-container {\n  column-count: 1;\n  column-gap: 16px;\n  margin-top: 30px;\n}\n.brands-container .brand-block {\n  display: block;\n}\n.brands-container .brand-block .brand {\n  background-color: #ffffff;\n  padding: 16px;\n  display: inline-block;\n  margin: 8px 0;\n}\n.brands-container .brand-block .brand img {\n  max-width: 100%;\n}\n\n@media (min-width: 480px) {\n  .brands-container {\n    column-count: 2;\n  }\n}\n@media (min-width: 1024px) {\n  .brands-container {\n    column-count: 3;\n  }\n}\n@media (min-width: 1024px) {\n  .brands-container {\n    column-count: 4;\n  }\n}\n@media (min-width: 1200px) {\n  .brands-container {\n    column-count: 5;\n  }\n}\n.filter-sidenav {\n  width: 280px;\n  border: 0 !important;\n}\n.filter-sidenav .mat-expansion-panel-header-title {\n  text-transform: uppercase;\n}\n\n.filter-row {\n  background: #ffffff;\n  padding: 8px 12px;\n}\n\n.all-products {\n  min-height: 400px;\n  padding: 2px;\n  overflow: hidden;\n}\n.all-products.p-left {\n  padding-left: 16px;\n}\n\n.products-wrapper {\n  margin: 8px -8px;\n}\n.products-wrapper .col {\n  padding: 8px;\n}\n\n.categories-wrapper {\n  position: relative;\n  max-height: 300px;\n}\n\n.filter-buttons button {\n  min-width: 36px;\n  margin: 0 6px 10px 0;\n  padding: 0;\n}\n\n.filter-price .mat-slider-horizontal {\n  min-width: 110px;\n}\n\n.selected-button {\n  background-color: gray;\n  color: #ffffff;\n}",""]),d.exports=s.toString()},818:(d,m,n)=>{"use strict";n.r(m),n.d(m,{BrandstoreModule:()=>v,routes:()=>y});var r=n(1635),p=n(1995),s=n(177),c=n(4438),S=n(9417),i=n(6661),g=n(6206),R=n(2796);var B=n(2437),P=n.n(B),h=n(5351),o=n(32),T=n(2504);let b=class{api;activatedRoute;dataService;dialog;router;utilityService;subscribedRoute;sidenav;allproducts=[];products=[];slides=[];Brandstore;sidenavOpen=!0;logo;searchText;page;viewType;viewCol=25;count;counts=[12,24,36,48,96];sortings;sort;brandstore;categoryimage;selcat;range={min:0,max:0};selectedRange={min:0,max:0};constructor(t,e,a,l,u,x){this.api=t,this.activatedRoute=e,this.dataService=a,this.dialog=l,this.router=u,this.utilityService=x}ngOnInit(){this.viewType="grid",this.count=this.counts[0],this.sortings=this.dataService.getSortings(),this.sort=this.sortings[0],this.subscribedRoute=this.activatedRoute.params.subscribe(t=>{this.getBrandByCategory(t.name,t.id),this.getBrand(t.name),this.getBranddata(t.name)}),window.innerWidth<960&&(this.sidenavOpen=!1),window.innerWidth<1280&&(this.viewCol=33.3)}filterByCategory(t){this.products=this.allproducts.filter(e=>(0,T.sl)(e.category).slice(-1)[0]===Number(t)),this.selcat=this.brandstore.categorylst.filter(e=>Number(e.CatID)===Number(t))[0],this.setPointRange()}showAll(){this.products=this.allproducts,this.setPointRange()}getBrand(t){const e={brandName:t.split(" ").join(""),tier:0};this.api.get("BrandCategory/GetBrandPageData",e).subscribe(a=>{this.products=a,this.allproducts=a,this.setPointRange()})}getBrandByCategory(t,e){const a={brandName:t.split(" ").join(""),categoryID:e,tier:0};this.api.get("BrandCategory/GetBrandPageData",a).subscribe(l=>{this.products=l,this.allproducts=l,this.setPointRange(),this.selcat=this.brandstore.categorylst.filter(u=>Number(u.CatID)===Number(e))[0]})}getBranddata(t){const e={BrandName:t.split(" ").join("")};this.api.get("BrandStore/GetBrandStore",e).subscribe(a=>{this.brandstore=a})}setPointRange(){this.range=this.utilityService.minmaxRange(this.products),this.selectedRange.min=this.range.min,this.selectedRange.max=this.range.max}filterByPoints(){this.products=this.allproducts.filter(t=>Number(t.points)>=this.selectedRange.min&&Number(t.points)<=this.selectedRange.max)}resetPoints(){this.selectedRange.max=this.range.max,this.selectedRange.min=this.range.min,this.searchText="",this.filterByPoints()}changeSorting(t){this.sort=t}changeCount(t){}changeViewType(t,e){this.viewType=t,this.viewCol=e}changeViewTypeOld(t,e){this.viewType=t,this.count=e}onPageChanged(t){this.page=t,window.scrollTo(0,0)}onChangeCategory(t){t.target&&this.router.navigate([o.K_.PRODUCTS,t.target.innerText.toLowerCase()])}ngOnDestroy(){this.subscribedRoute.unsubscribe()}static ctorParameters=()=>[{type:o.Gf},{type:i.nX},{type:o.uS},{type:h.bZ},{type:i.Ix},{type:o.QY}];static propDecorators={sidenav:[{type:c.Uct,args:["sidenav"]}],Brandstore:[{type:c.pde}]}};b=(0,r.Cg)([(0,c.uAl)({selector:"app-brandcategory",template:'<div fxLayoutAlign="center top">\n  <a [routerLink]="[\'/brandstore\', brandstore.BrandName.split(\' \').join(\'\').toLowerCase]">\n    <img src="{{ brandstore.logo }}"\n  /></a>\n</div>\n<div fxLayoutAlign="center center">\n  <mat-toolbar fxShow="false" fxShow.gt-sm class="top-navbar mat-elevation-z2" fxLayoutAlign="center center">\n    <button disableRipple mat-button *ngIf="allproducts.length !== products.length" (click)="showAll()">\n      Show All\n    </button>\n    <button\n      disableRipple\n      mat-button\n      ng-class="{ \'selected-button\': \'selcat===c.id\' }"\n      *ngFor="let c of brandstore?.categorylst"\n      (click)="filterByCategory(c.CatID)"\n    >\n      {{ c.CatName }}\n    </button>\n  </mat-toolbar>\n</div>\n.\n<mat-sidenav-container>\n  <mat-sidenav #sidenav [opened]="sidenavOpen" [mode]="sidenavOpen ? \'side\' : \'over\'" class="filter-sidenav">\n    <mat-accordion displayMode="flat" multi="true">\n      <mat-expansion-panel expanded>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            <h4>Advanced Search</h4>\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-form-field class="w-100">\n          <input matInput placeholder="Enter search keyword..." [(ngModel)]="searchText" />\n        </mat-form-field>\n      </mat-expansion-panel>\n\n      <mat-expansion-panel expanded>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            <h4>Credit Range</h4>\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <div fxLayout="row" fxLayoutAlign="space-between center" class="filter-price">\n          <ngx-slider\n            [(value)]="selectedRange.min"\n            [(highValue)]="selectedRange.max"\n            [options]="{ floor: range.min, ceil: range.max }"\n          >\n          </ngx-slider>\n        </div>\n        <div fxLayout="row" fxLayoutGap="50px">\n          <button color="primary" (click)="resetPoints()">Remove filters</button>\n          <button color="primary" (click)="filterByPoints()">Submit</button>\n        </div>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </mat-sidenav>\n\n  <mat-sidenav-content class="all-products" ngClass.gt-sm="p-left">\n    <div>\n      <img aria-hidden="true" style="padding-left: 8%" src="{{ selcat?.CategoryBanner }}" alt="" />\n    </div>\n    <div\n      fxLayout="row"\n      fxLayout.xs="column"\n      fxLayoutAlign="space-between center"\n      class="filter-row mat-elevation-z1 text-muted"\n    >\n      <button *ngIf="!sidenavOpen" mat-icon-button (click)="sidenav.toggle()">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <div>\n        <a disableRipple mat-button [matMenuTriggerFor]="sortMenu" #sortMenuTrigger="matMenuTrigger">\n          {{ sort.lbl }}<mat-icon class="mat-icon-sm caret">arrow_drop_down</mat-icon>\n        </a>\n        <mat-menu #sortMenu="matMenu" xPosition="before" class="app-dropdown" overlapTrigger="true">\n          <span (mouseleave)="sortMenuTrigger.closeMenu()">\n            <button mat-menu-item *ngFor="let sort of sortings" (click)="changeSorting(sort)">\n              <span>{{ sort.lbl }}</span>\n            </button>\n          </span>\n        </mat-menu>\n      </div>\n      <div fxLayout="row wrap">\n        <div fxFlex="100">\n          <mat-card class="p-0 text-center">\n            <pagination-controls\n              class="product-pagination"\n              [autoHide]="false"\n              [maxSize]="5"\n              (pageChange)="onPageChanged($event)"\n            ></pagination-controls>\n          </mat-card>\n        </div>\n      </div>\n      <div>\n        <a disableRipple mat-button [matMenuTriggerFor]="countsMenu" #countsMenuTrigger="matMenuTrigger">\n          Show {{ count }}<mat-icon class="mat-icon-sm caret">arrow_drop_down</mat-icon>\n        </a>\n        <mat-menu #countsMenu="matMenu" xPosition="before" class="app-dropdown" overlapTrigger="true">\n          <span (mouseleave)="countsMenuTrigger.closeMenu()">\n            <button mat-menu-item *ngFor="let count of counts" (click)="changeCount(count)">\n              <span>{{ count }}</span>\n            </button>\n          </span>\n        </mat-menu>\n        <button mat-icon-button (click)="changeViewType(\'list\', 100)">\n          <mat-icon>view_list</mat-icon>\n        </button>\n        <button mat-icon-button (click)="changeViewType(\'grid\', 33.3)">\n          <mat-icon>view_module</mat-icon>\n        </button>\n        <button mat-icon-button (click)="changeViewType(\'grid\', 25)">\n          <mat-icon>view_comfy</mat-icon>\n        </button>\n      </div>\n    </div>\n\n    <div *ngIf="viewType == \'grid\'" fxLayout="row wrap" class="products-wrapper">\n      <div\n        *ngFor="\n          let p of products\n            | productSearchPipe: searchText\n            | productSort: sort.field : sort.reverse\n            | paginate: { itemsPerPage: count, currentPage: page }\n        "\n        fxFlex="100"\n        [fxFlex.gt-sm]="viewCol"\n        fxFlex.sm="50"\n        class="col"\n      >\n        <app-product-detail [product]="p"></app-product-detail>\n      </div>\n    </div>\n\n    <div *ngIf="viewType == \'list\'" fxLayout="row wrap" class="products-wrapper">\n      <div\n        *ngFor="\n          let p of products | productSearchPipe: searchText | paginate: { itemsPerPage: count, currentPage: page }\n        "\n        fxFlex="100"\n        class="col"\n      >\n        <app-product-detail-list [product]="p"></app-product-detail-list>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n',styles:[P()]}),(0,r.Sn)("design:paramtypes",[o.Gf,i.nX,o.uS,h.bZ,i.Ix,o.QY])],b);var M=n(7064),O=n.n(M);let f=class{api;activatedRoute;dataService;dialog;router;util;Brandstore;categories=[];brandstore;logo;slides=[];images=[];subscribedRoute;constructor(t,e,a,l,u,x){this.api=t,this.activatedRoute=e,this.dataService=a,this.dialog=l,this.router=u,this.util=x}ngOnInit(){this.subscribedRoute=this.activatedRoute.params.subscribe(t=>{if(""===t.name)this.router.navigate(["/brands"]);else{const e=t.name;this.images=this.dataService.getBrandStoreImages(e),this.getBrandStore(e),this.getBranddata(e)}})}ngOnDestroy(){this.subscribedRoute.unsubscribe()}getBrandStore(t){const e={brandName:t.split(" ").join(""),tier:0};this.api.get("BrandStore/GetBrandStore",e).subscribe(a=>{this.brandstore=a})}getBranddata(t){this.dataService.getBrandStore(t).subscribe(e=>{this.logo=e.logo,e.categorylst.map(a=>{this.categories.push({name:a.CatName,id:a.CatID})})})}static ctorParameters=()=>[{type:o.Gf},{type:i.nX},{type:o.uS},{type:h.bZ},{type:i.Ix},{type:o.QY}];static propDecorators={Brandstore:[{type:c.pde}]}};f=(0,r.Cg)([(0,c.uAl)({selector:"app-brandstore",template:'<div fxLayoutAlign="center center" *ngIf="images.length > 0">\n  <img aria-hidden="true" src="{{ logo }}" />\n</div>\n<mat-toolbar\n  fxShow="false"\n  fxShow.gt-sm\n  class="top-navbar mat-elevation-z2"\n  fxLayoutAlign="center center"\n  *ngIf="images.length > 0"\n>\n  <button\n    disableRipple\n    mat-button\n    ng-class="{ \'selected-button\': \'selcat===c.id\' }"\n    *ngFor="let c of brandstore?.categorylst"\n    [routerLink]="[\'/brandstore\', brandstore.BrandName, c.CatID]"\n  >\n    {{ c.CatName }}\n  </button>\n</mat-toolbar>\n\n<app-brand-carousel [slides]="images"></app-brand-carousel>\n\n<div class="brands-container">\n  <div class="brand-block text-center" *ngFor="let c of brandstore?.categorylst">\n    <a [routerLink]="[\'/brandstore\', brandstore.BrandName, c.CatID]" class="brand mat-elevation-z3">\n      <img aria-hidden="true" [src]="c.imageName" style="max-width: 100px" />\n    </a>\n    <br />\n    <a [routerLink]="[\'/brandstore\', brandstore.BrandName, c.CatID]">{{ c.CatName }}</a>\n  </div>\n</div>\n',styles:[O()]}),(0,r.Sn)("design:paramtypes",[o.Gf,i.nX,o.uS,h.bZ,i.Ix,o.QY])],f);var L=n(6458),A=n(882),D=n(1161),N=n(2102),F=n(9115),k=n(9217),G=n(5596),E=n(9631);const y=[{path:":name",component:f,data:{breadcrumb:":name"}},{path:":name/:id",component:b}];let v=class{};v=(0,r.Cg)([(0,c.UQu)({declarations:[f,b],imports:[s.MD,i.iI.forChild(y),S.YN,R.ed,p.Ti,g.hT,s.MD,g.YJ,g.Mb,g.yG,g.Gc,L.YF,A.vg,D.MY,N.RG,F.Cn,k.m_,G.Hu,E.fS]})],v)}}]);